from flask import Flask, request, jsonify
from datetime import datetime
import os

app = Flask(__name__)

# üîê Dummy License Database (‡¶è‡¶á‡¶ñ‡¶æ‡¶®‡ßá key list ‡¶•‡¶æ‡¶ï‡¶¨‡ßá)
licenses = {
    "ABC123": {
        "device_id": "your_device_id_will_bind_here",
        "expires": "2025-12-31",  # ‡¶Æ‡ßá‡ßü‡¶æ‡¶¶ ‡¶∂‡ßá‡¶∑ ‡¶π‡¶¨‡ßá
        "version": "1.0.0"         # ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡ßá‡¶∞ ‡¶ï‡¶æ‡¶õ‡ßá ‡¶ï‡ßã‡¶® version ‡¶Ü‡¶õ‡ßá
    }
}

# üîÑ Latest version info
LATEST_VERSION = "1.0.0"
UPDATE_LINK = "https://yourwebsite.com/download/tool.exe"  # ‡¶è‡¶ü‡¶æ ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ Tool ‡¶è‡¶∞ ‡¶®‡¶§‡ßÅ‡¶® download ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶π‡¶¨‡ßá

@app.route("/check", methods=["POST"])
def check_license():
    data = request.json
    key = data.get("key")
    device = data.get("device_id")
    version = data.get("version")

    if key not in licenses:
        return jsonify({"valid": False, "reason": "Invalid key"})

    license_info = licenses[key]

    # ‚úÖ Device bind check
    if license_info["device_id"] != device:
        return jsonify({"valid": False, "reason": "Device mismatch"})

    # ‚è± Expiry check
    expired = datetime.strptime(license_info["expires"], "%Y-%m-%d") < datetime.now()

    # üÜï Version outdated check
    version_outdated = version != LATEST_VERSION

    return jsonify({
        "valid": True,
        "expired": expired,
        "version_outdated": version_outdated,
        "latest_version": LATEST_VERSION,
        "update_link": UPDATE_LINK
    })

@app.route("/", methods=["GET"])
def home():
    return "Subscription API is running."

# ‚úÖ Render-compatible server runner
if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
